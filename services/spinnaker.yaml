---

halyard:
  spinnakerVersion: 1.18.0
  image:
    tag: 1.29.0
  additionalScripts:
    enabled: true
    configMapName: halyard-config
    configMapKey: config.sh
    create: true
    data:
      enable_helm_artifact.sh: |-
        echo "enabling helm artifact"
        $HAL_COMMAND config artifact helm enable
        $HAL_COMMAND config artifact helm account add stable \
          --repository https://storage.googleapis.com/homelabprojects-public
        $HAL_COMMAND config artifact helm account add openfaas \
          --repository https://openfaas.github.io/faas-netes
        $HAL_COMMAND config artifact helm account add chartmuseum \
          --repository http://chartmuseum.storage:8080
        $HAL_COMMAND config artifact helm account add jetstack \
          --repository https://charts.jetstack.io
        $HAL_COMMAND config artifact helm account add istio.io \
          --repository https://storage.googleapis.com/istio-release/releases/1.3.5/charts
        $HAL_COMMAND config artifact helm account add codecentric \
          --repository https://codecentric.github.io/helm-charts
        $HAL_COMMAND config artifact helm account add pomerium \
          --repository https://helm.pomerium.io
      enable_gcs.sh: |-
        echo "enabling gcs artifact"
        $HAL_COMMAND config artifact gcs enable
        $HAL_COMMAND config artifact gcs account add gcs \
          --json-path /opt/gcs/key.json
      enable_no_auth_http.sh: |-
        echo "enabling http artifact"
        $HAL_COMMAND config artifact http enable
  additionalProfileConfigMaps:
    data:
      igor-local.yml:
        spinnaker:
          pollInterval: 30
          pollingSafeguard:
            # to prevent igor sending notifications to all pipelines on redis flush:
            # curl -X POST $IGOR/admin/pollers/fastforward/dockerTagMonitor
            # https://github.com/spinnaker/spinnaker/issues/2767
            itemUpperThreshold: 35000
      echo-local.yml:
        mail:
          enabled: true
          from: ""
        spring:
          mail:
            host: smtp.gmail.com
            username: ""
            password: ""
            port: 587
            properties:
              mail:
                smtp:
                  auth: true
                  starttls:
                    enable: true
                transport:
                  protocol: true
      settings-local.js: |
        window.spinnakerSettings.notifications.email = {
          enabled: true
        }
      gate-local.yml:
        security:
          oauth2:
            client:
              # clientId: 
              # clientSecret:
              # userAuthorizationUri:
              # accessTokenUri:
              scope: openid email profile offline_access
            resource: {}
              # userInfoUri:
            userInfoMapping:
              email: email
              firstName: given_name
              lastName: family_name
              username: preferred_username
          tomcat:
            protocolHeader: X-Forwarded-Proto
            remoteIpHeader: X-Forwarded-For
            internalProxies: .*
  resources:
    requests:
      cpu: 250m
      memory: 500Mi
    limits:
      cpu: 500m
      memory: 1Gi
dockerRegistries:
- name: dockerhub
  address: index.docker.io
  repositories:
  - bitnami/mongodb
  - bitnami/postgresql
  - bitnami/redis
  - chartmuseum/chartmuseum
  - hugocortes/me
  - hugocortes/blue-green
  - idobry/chartmuseumui
  - jboss/keycloak
  - keycloak/keycloak-gatekeeper
  - library/mysql
  - library/nginx
  - linuxserver/calibre-web
  - linuxserver/jackett
  - linuxserver/radarr
  - linuxserver/sonarr
  - linuxserver/transmission
  - metallb/controller
  - metallb/speaker
  - plexinc/pms-docker
  - pomerium/pomerium
  - solidnerd/bookstack
- name: quay
  address: quay.io
  repositories:
  - external_storage/nfs-client-provisioner
spinnakerFeatureFlags:
  - artifacts
  - pipeline-templates
  - managed-pipeline-templates-v2-ui
  - artifacts-rewrite
minio:
  enabled: false
gcs:
  enabled: true
redis:
  enabled: false
  external:
    host: redis-master.storage.svc.cluster.local
kubeConfig:
  enabled: true
  secretName: kubeconfig
  secretKey: config
  contexts:
  - prometheus
  - hestia
  - athens
  deploymentContext: prometheus
  omittedNameSpaces:
  - kube-public
